import pandas as pd

def create_individuals(tract):
    # print("++++++++++Create People+++++++++++")
    """Generate a population of ages and sexes as a DataFrame

    Given the number of individuals for 18 age groups of each sex,
    return a two column DataFrame of age ([0,89]) and sex ('m','f')
    """
    # portion = tract.geometry.area / tract.Shape_Area # what portion of the tract is included
    # age_sex_groups = (tract[22:59].drop('DP0010039') * portion).astype(int)

    age_sex_groups = (tract[22:59].drop('DP0010039')).astype(int)

    # dfs=pd.DataFrame()
    dfs = []

    # code is the index(generated by the enumerate build-in function) of the list
    # ,which indicates the age and sex group
    # code 0~17 male
    # code 18~35 female
    for code, count in enumerate(age_sex_groups):
        base_age = (code % 18) * 5
        gender = 'm' if code < 18 else 'f'
        ages = []
        for offset in range(4):
            ages.extend([offset + base_age] * (count // 5))
        ages.extend([base_age + 4] * (count - len(ages)))
        temp = pd.DataFrame({'code': code, 'age': ages, 'sex': [gender] * count})
        dfs.append(pd.DataFrame({'code': code, 'age': ages, 'sex': [gender] * count}))
        # dfs = pd.concat([dfs, temp])
    df = pd.concat(dfs).sample(frac=1, random_state=123).reset_index(drop=True)
    # df = pd.concat([dfs]).sample(frac=1,random_state=123).reset_index(drop=True)
    df.index = tract.name + 'i' + df.index.to_series().astype(str)
    # df['friends'] = [set()] * len(df)
    return df